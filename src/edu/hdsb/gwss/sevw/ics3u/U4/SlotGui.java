package edu.hdsb.gwss.sevw.ics3u.U4;

import java.awt.Image;
import java.awt.LayoutManager;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JPanel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Sean
 */
public class SlotGui extends javax.swing.JFrame {

    /**
     * Creates new form SlotGui
     */
    public SlotGui() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        firstDisplay = new javax.swing.JPanel();
        secondDisplay = new javax.swing.JPanel();
        thirdDisplay = new javax.swing.JPanel();
        spin = new javax.swing.JButton();
        tokenLabel = new java.awt.Label();
        tokenDisplay = new java.awt.Label();
        outputBar = new java.awt.Label();
        spinCountDisplay = new java.awt.Label();
        spinCountTitle = new java.awt.Label();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout firstDisplayLayout = new javax.swing.GroupLayout(firstDisplay);
        firstDisplay.setLayout(firstDisplayLayout);
        firstDisplayLayout.setHorizontalGroup(
            firstDisplayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        firstDisplayLayout.setVerticalGroup(
            firstDisplayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout secondDisplayLayout = new javax.swing.GroupLayout(secondDisplay);
        secondDisplay.setLayout(secondDisplayLayout);
        secondDisplayLayout.setHorizontalGroup(
            secondDisplayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        secondDisplayLayout.setVerticalGroup(
            secondDisplayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout thirdDisplayLayout = new javax.swing.GroupLayout(thirdDisplay);
        thirdDisplay.setLayout(thirdDisplayLayout);
        thirdDisplayLayout.setHorizontalGroup(
            thirdDisplayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        thirdDisplayLayout.setVerticalGroup(
            thirdDisplayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        spin.setText("SPIN!!");
        spin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                spinActionPerformed(evt);
            }
        });

        tokenLabel.setAlignment(java.awt.Label.CENTER);
        tokenLabel.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        tokenLabel.setText("Tokens");

        tokenDisplay.setAlignment(java.awt.Label.CENTER);
        tokenDisplay.setFont(new java.awt.Font("DFKai-SB", 0, 48)); // NOI18N
        tokenDisplay.setText("50");

        outputBar.setBackground(new java.awt.Color(0, 0, 0));
        outputBar.setForeground(new java.awt.Color(255, 255, 255));
        outputBar.setText("Welcome To Crazy Slots!!!");

        spinCountTitle.setName(""); // NOI18N
        spinCountTitle.setText("Number of Spins!");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(spin, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tokenLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(firstDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19)
                        .addComponent(secondDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(thirdDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(spinCountDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(43, 43, 43))
                            .addComponent(spinCountTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(outputBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tokenDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(firstDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(secondDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(thirdDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(spinCountTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(spinCountDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(tokenLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spin))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tokenDisplay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(outputBar, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(34, Short.MAX_VALUE))))
        );

        spinCountDisplay.getAccessibleContext().setAccessibleName("");

        pack();
    }// </editor-fold>//GEN-END:initComponents
    int token = 50;
    int spinCount;
    private void spinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_spinActionPerformed
    //Variables Start
    int first;          //first wheel
    int second;         //Second wheel
    int third;          //Third wheel
           //Token counter
    String play="Y"; 
                
    //Token deduction and display
    token=token-1;
    this.tokenDisplay.setText(""+token);
    
    //Spin Counter
    spinCount++;
    this.spinCountDisplay.setText(""+spinCount);
    
    // random number generation
    first = (int) (Math.random() * 4) + 1;
    second = (int) (Math.random() * 4) + 1;
    third = (int) (Math.random() * 4) + 1;

    //Import images
    ImageIcon Lemon = new ImageIcon("Lemon.jpg");
        Image lemon = Lemon.getImage();
    ImageIcon Cherry = new ImageIcon("Cherry.jpg");
        Image cherry = Cherry.getImage();
    ImageIcon Orange = new ImageIcon("Orange.jpg");
        Image orange = Orange.getImage();
    ImageIcon Bar = new ImageIcon("Bar.jpg");
        Image bar = Bar.getImage();
    //Slot Output
    switch (first) {
        case 1:
        case 2:
        case 3:
        case 4:
    }
    switch (second) {
        case 1:
        case 2:
        case 3:
        case 4:
    }
    switch (third) {
        case 1:
        case 2:
        case 3:
        case 4:
    }

    //Are you a winner
    if (first == second && second == third) {

        //Switch to calculate wether you win or not
        switch (first) {
            case 1:
                this.outputBar.setText("Three 1's you win 4 tokens!!");
                token = token + 4;
                break;
            case 2:
                this.outputBar.setText("Three 2's you win 6 tokens!!");
                token = token + 6;
                break;
            case 3:
                this.outputBar.setText("Three 3's you win 8 tokens!!");
                token = token + 8;
                break;
            case 4:
                this.outputBar.setText("Three 4's you win 10 tokens!!");
                token = token + 10;
                break;

        }
    } else {
    this.outputBar.setText("You Lose.");
    if(token==0){
    this.outputBar.setText("You ran out of tokens, The machine has automatically restarted to 50 tokens!");
    token=token+50;
    }}
            
   
    }//GEN-LAST:event_spinActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
                //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SlotGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SlotGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SlotGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SlotGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SlotGui().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel firstDisplay;
    private java.awt.Label outputBar;
    private javax.swing.JPanel secondDisplay;
    private javax.swing.JButton spin;
    private java.awt.Label spinCountDisplay;
    private java.awt.Label spinCountTitle;
    private javax.swing.JPanel thirdDisplay;
    private java.awt.Label tokenDisplay;
    private java.awt.Label tokenLabel;
    // End of variables declaration//GEN-END:variables
}
